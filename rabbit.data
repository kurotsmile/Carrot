{
    "key_api_google_translate":"AIzaSyCN8IEJvdUvoxFbnr0M3xyByr6pJmNsCCk",
    "key_api_google_location":"AIzaSyDtrxOBgBfiRLaxKP0p_UzfE2-hsjHNKBw",
    "key_api_google_youtube":"AIzaSyDzsx1KYLZL5COz1NaTD8cOz8GYalX2Dxc",
    "paypal_pub_CLIENT_ID":"AYgLieFpLUDxi_LBdzDqT2ucT4MIa-O0vwX7w3CKGfQgMGROOHu-xz2y5Jes77owCYQ1eLmOII_ch2VZ",
    "paypal_dev_CLIENT_ID":"AcW86yX1h7Mae8ofqkhDol9d9kq5zI4fVY5jKuRT45uTwQw52aYYDNI5AwjrKw7tAExqW5N128z1qLF1",
    "server":[
        {
            "apiKey": "AIzaSyDzsx1KYLZL5COz1NaTD8cOz8GYalX2Dxc",
            "authDomain": "carrotstore.firebaseapp.com",
            "projectId": "carrotstore",
            "storageBucket": "carrotstore.appspot.com",
            "messagingSenderId": "745653792874",
            "appId": "1:745653792874:web:55d78113cd3dea7c28da13",
            "measurementId": "G-KXDDJ42JFN"
        },
        {
            "apiKey": "AIzaSyDVjcvGOiLjOP3borkUNkbfo-dpnHiMN9s",
            "authDomain": "rabbit-67f4b.firebaseapp.com",
            "projectId": "rabbit-67f4b",
            "storageBucket": "rabbit-67f4b.appspot.com",
            "messagingSenderId": "407695157842",
            "appId": "1:407695157842:web:7a83fd03e4c605ff240d8b",
            "measurementId": "G-3JKTNGKPQY"
        },
        {
            "apiKey": "AIzaSyCLz6GWyplGy2KgrPTZHPcD6WKKuxJoexI",
            "authDomain": "kurotsmile.firebaseapp.com",
            "projectId": "kurotsmile",
            "storageBucket": "kurotsmile.appspot.com",
            "messagingSenderId": "343363331737",
            "appId": "1:343363331737:web:55a35a607c33c28ca2ba08",
            "measurementId": "G-S4JZCF5BHT"
        }
    ],
    "url_server_rest_api":[
        "https://firestore.googleapis.com/v1/projects/carrotstore/databases/(default)/documents",
        "https://firestore.googleapis.com/v1/projects/rabbit-67f4b/databases/(default)/documents",
        "https://firestore.googleapis.com/v1/projects/kurotsmile/databases/(default)/documents"
    ],
    "service_account":[
        {
            "type": "service_account",
            "project_id": "carrotstore",
            "private_key_id": "6e6ebb9aea156a0a4b77da5a09c8c9b50c63e623",
            "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCcSc07XMpVjIly\nwdEZAPr+j8aHe3LPU5oNvUHXH1rcT3Tu4FPHvRfK5CW+/hXTZZ0F8xOtZHlAOsVl\nkiuk5+MJDpSV+NhVURkXey3FyLe+9j7QaO7JU94NQAjniSoWn9kPTFTx02RJbpQt\n47GuLZU0O4lLf+uXK6sh1JyjdmZjgbKvddZRc8IfZdC7dKyq4OGBq+ZkWbExkYnr\nO6ha0SMZt9e/Z5vh34doMptkFUn5umvX6nLE2A4CqxDrxiML3G3TUREOxQDj4fBi\nKqWy0q3AYRb21fi7+dZTPQwCYZDb4uqaP0X5hJ7RnRF9H8Fegavfbl2I3jGDHkXH\nhZyjdQa5AgMBAAECggEAMPNClxGwg8vxLuK6qZCvjHSes0d8hahDK4N38DdvX2p5\njunvA7PblF4R3ni5gE0mubrREnFSMsZVlkMKbWt9phQNgM2AgHRWng6kHvsHZgW9\nVcxP4fnlJhRE1bQV3SEyvIJlZpqVohRCz/6tY4b+YO42ydFmiiIQxxdO+jm2xvpW\nLqnl6ddnfio3fN23zuqDdQ8IzUHCh1JdtexYOW4b1CO5MFZsB1RCL+wF7vwQ8v21\nd0Uupw4iOCVofOEd3wAbrqLa+568LcwCRYJN+BaTL5lkYPSub0hUPjCvyY+fyjtK\njTQtwA7ZARG0xOxUebGpwjN0aLUnNgLiQeHNRMz1EwKBgQDZeBiXnefSXROK+Hhi\n7hJ5xVAIZrcUGTioGGFra0bQc4DjKol5lcHwT1yCtUYfilKPBqIkxbCnFfhmvp/K\nUpOx3EibhwDsz6LgPgU8W5hWB3yyR8GOHvBJ+l8GGU1X7FPTtfWtAeUatCCwLELh\nr+CTVi22CqK++qSzEK6FJNWBHwKBgQC3+q6ou4yrEG3NRY4izjTclptv4xnW4bKV\nlKSe1Ckr4/Ln4nPiFW+nWGoRiVaL9PAkJLDzBN/1+KgbFc0u8sqTHGXSFT+LW5z6\n7tD3S3XXdhYsno3UZHf8ExBr42lmTaaJ9J9dqVZOeCI31vUDk0ok1CRxI7SqvBTf\nlhuHO79FJwKBgBoMYpW2mk/+Shr5TCI9dgUT91QqSX+kzb6EvRaK0P6i9ys+qxzf\nLU3Fk8UsRWv9u4naN43ECDbbUNetuaIYZgyF4ESQ1TGIZXAKvcHPDt4vI2aPZcXK\nOuoBjWRDn5oKerf/MaA5e+HI9alkg9ZYpMPBLNSDTZ8mkpfIRb84/EHtAoGATiSP\nouNmMBJeUN3GLUpgcYEWrENNalOawqXL9hovEpFTTuKETfbE4dNP2fr3Y6K5jOB4\nt//OEG95F2f/Kn29RRa+uKiFwO88keh1oVPPzaA+ct01aIzz2YFPbEO/NNCud9IL\nDoEqQ1ILVqRalRYuW84vXE7KIeqZAw6CysG5z+kCgYBRIYpby/YXQ5KPfI2UoL5+\nU7AZBMmK6h19rz3kqllHkxAdljssTVYG9LEM26jGyJZ75rWcbUyNcgcN8IvJ3+Do\nj/QvisVpP04KMbx1Eu7pVEx08Xddiiuo0p6LhuFgpwI/AkKiHtmKTUYPO+GlooKf\nNdiT/HE8wwf1SHE4Z/x5ww==\n-----END PRIVATE KEY-----\n",
            "client_email": "firebase-adminsdk-cxn3p@carrotstore.iam.gserviceaccount.com",
            "client_id": "112538490438754973340",
            "auth_uri": "https://accounts.google.com/o/oauth2/auth",
            "token_uri": "https://oauth2.googleapis.com/token",
            "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
            "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-cxn3p%40carrotstore.iam.gserviceaccount.com",
            "universe_domain": "googleapis.com"
        },
        {
            "type": "service_account",
            "project_id": "rabbit-67f4b",
            "private_key_id": "f13cab484a7385a76f4b185dadee5c3c566399a1",
            "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCSfexWqZHBdhHd\n7U5q6giOCIW8qnPj9U5YPVmv4MOqk5FGyoEiFOe0rYh6Zs28VQy6h2BFDIuXlBS/\nX08ORfgX6+89ZNUvNJOzCTg6pMuAEtG5yOZDsFHOCbKitgVUFw/uqcCMP3z2woFf\ntXYuMe3Hndvf/WYEn/Csx5XN5vsK45V0XApo6zKl6larzuHD0+RAIcWrRAnrdTxI\n7utHyYgIFm8UZrSLqSp/RlnmeQ5uIz2XfYG5ukvs28bnt7jacar6YyXbmO5OoIX8\nLdSqrFr8SAhU19qVNKZDPtSsKNZzO4QmrjadVaaHp9a0xpdB0CN61Lns93hPMDIu\n3CF+sUl9AgMBAAECggEAGYUYXAyUWMiR2kCSDawRq3Sun6xuHgNJD7Q4YJxeWeP1\nRgjXMDHGH8KvaOtp4epLGl+lFMJXuyNP7frTkd/8lWZDukVLojqdlG4Bvq2gygH9\nSUlHW/lmdudXmGLvULPn0aL+6S/SPEasNRkuqmOGUeUdPcsuL5YRXngyj7kyeLXj\nfiuSNQOuvnJBjRjOVJdEb/tmRqqmUVAc5gxQvAdxcpAREwNraHaIJpWZD/iYgbnJ\nwjWL0qPAcKqyppUFXhATnqiQPCi4M0aKGFSJozhTtF9Cdx8F3AfgecXvz15F2mjt\nHJX8mZzUNrd0NrkD5JSn/58KFGnDiSIHCR5dV5QhfQKBgQDHVe13xb8wTj6Hh4Ms\nD7YqMO6bE0Fge/Ph9uz2ZdGf0u1t4DWDX6H1OrU+0YghY4WNnWSC459ahvBPiMlN\nRxo81smZM09TwUDQCZ6nVMuZc3VVVI4g4hm3y2hO7RTbV3P29SO/W1+5BsnpulhL\nioxwXgBtrzvayX0fimi/eZmlywKBgQC8InG0GfKLkQdFexvCrWu2WqIs5t9p6bMJ\namYULVO9YVJFRwQiqsj4qBtZhCpW+0WwmtbTSYv/Fsl3YxCA/MNbmfcTsW/fCAJs\nidp+5Gt8qJ6GdgqEJyvIM04RNXIVgdSFyFTTmnQU7sScrbe3YFd8ZR6GDyRaWJ4D\nnauKmzOk1wKBgHq7BkXrZCb61fceUX4sgk2B6Tdj6KneR6/GF+oxkJqmBPfUxz4H\nALH7nqJ54iYkn5Ms6DjKq0/Sq11c7Ax/jcENwfxoohwAbcZpVdzTEbR+aSzLreLD\nM3B9ddC6mk/ejZDtKEBmow5KBsG4sSp5uLRqvDrMXL79teNYldvmo9p3AoGAYnX4\nYhSuXqLRVmi+t51BYReABtXxmSGpBMV9lRO/3r5fa0hmfqo5MgHxBmFoM0ugRnRS\n+BNmxGMtn2DmU0t2BqvGprTXYrdzZVCkXIK5Sm2JQb/ncxB5FnbbZaA+C8l962JU\nGsab+BSaK5GzM7KlNsJJPkoQcYQtdqD/FTRyy9MCgYAQJ67mbLS8UrXFkmTY3ngO\n4+xlK9TpdVxtEtKisv6V4Q0u9v+C28+ZUySLjaZBQPaQmrOkfggTCZGmiMkoHJyU\nnFwTysjJoeiT272G0PcOjlnb8ah6WCQokdnpih8WJZrH+r4RTikhNOef2wB54n0b\nT6iCSCoN6DmFMTjAeGkPWA==\n-----END PRIVATE KEY-----\n",
            "client_email": "firebase-adminsdk-scoyi@rabbit-67f4b.iam.gserviceaccount.com",
            "client_id": "118069581904842019791",
            "auth_uri": "https://accounts.google.com/o/oauth2/auth",
            "token_uri": "https://oauth2.googleapis.com/token",
            "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
            "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-scoyi%40rabbit-67f4b.iam.gserviceaccount.com",
            "universe_domain": "googleapis.com"
        },
        {
            "type": "service_account",
            "project_id": "kurotsmile",
            "private_key_id": "8c627993c0caa5ebdf34d95e146ce894dd371263",
            "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDF8hgVW4xsXown\n9z2sF7aGkuCBnm291C6i9tn1rTkwu+za+p8+jIzqwj8wqBip/CtepPkiCepGpPDL\nNy6Hd19MaoCiiNjMAlqCihtdf/mrjZwvpniQkbIPv01bMhr/6O7BpKSIhxOvSHYg\nrxGeCnb4Q/A0pjxFZyZhxU4tbInEG9Risah7vTUA/xi4bK+OOGuad8jf2mcdw31B\n9k8puR41lz+j/sjsrO4ghtuhlMxIq/HJ2zgftYlj0Ev7BJlmni9iCvoGHgXbgA4k\nppR+Clw3MipWLZ2LxH+8mDtYXAswBWi8dVkmT2RJj76NAnWLStroQsn05puLhmJS\nSwJ7RXXrAgMBAAECggEAE+v8ytrRuVm9/wsN8hiEM8DA3KVubmOrpUDKiJnRqYXN\nsu+fVaMSpFE+x9hbJxyB3D7RSMDjtblwTJuLUMdNrY9YeUM5l+AIGPQ/syYn9sFD\n/ghh66GQ4K8vC2XHEYjGzXFoZ8nkdsiIWbC/nql3S3RBpCLeP66VI9OWPdHF1G6P\n71deQFvWbwx9AnBeFpdGF3skpe94YxtDJu+ExZp3lNRZ/8+JKzVmXdPVBysOawRY\nw6RtnSex9Gym8sTnw2OdXsE7F/72Q3MhdAueaSkfnXVQZjajHA9dwvYD+Ps7gfQl\nybDiVKoaLgwy5aX+59xioPUsERYdK60c9GBFIaBX1QKBgQDnec63KZAF//9THUEU\nOjjbRXsf10krb1bhT5Dt9h1eSpMfqP8pJ8IrzEk1iDhyzwspzBqg2JawOJ8RU4dv\ntw4mBpS0GdXW8Qd/ONESW6TWITtJ1EvzMlzgbZ+ObgfWadr+VLPRxMahoBl2eNez\nFu2i3JboG2xsd7kXlKiMXS6ANwKBgQDa6t36QIHG2vP7zdGc2znaWAFVCLEtF2Sc\nOUsLPYj7sm4lyHhMjxTjE/C9wVS7gyi+Nf82E1A58VhCiUXPA94s2zPbq/e6Yplv\npqk88MET9G7nQM+mgXDQmA6qTVZ7yyP9Qhnt/hl40MpHuPL77aXjmI/GTv6BNmYL\nwvm8uk3V7QKBgG+fEmrK1RO/ne0Dd2V8qfw65iO1migi2Z9u0fGeNA1LIuUqhljf\nPkgGi+sPlEDwzG5MaS7VIt05gKNHR1E80crOc5jhuHec5UOZL2CN5tAHWGLCyBkv\nWRA0bLOvJYJkq2DnkYr/O9WmsYCqx0EqNk/J1c95ofAwT4YqfpipOopDAoGAc1Do\n4Rv9wJwxjWCbm/62+NcGzJ4phlEeRFTBvQgLElqpPuncxKdSH1OvqqUeVy/91ERp\nTTjbN8pz7YiV5zhoXkSRipOJiPrLTE8EMv+3FSXbDaHMQC9LF/YhM4BNoCQfrxaU\nxhLlpAiHpUQ9aouCqOMCSTnvQm0/T87C8rFIsvkCgYEAh6c6P3l8ZlUEY2ae20vJ\nQnKc0+I7sebjTdz2nADoe9ziZZ1IY4nML/XyOA6UpQdYj7Xx2YIhzj0WNZ0fkdXf\nyUFHHD0sfCUdZ44zd6Ts2Tkmsg404Trp2y4XZUIQ75z33WfZW98L3MrfCo+x698w\njjR4de9G7tijESLbLYa0LRw=\n-----END PRIVATE KEY-----\n",
            "client_email": "firebase-adminsdk-99orv@kurotsmile.iam.gserviceaccount.com",
            "client_id": "114292907067300909203",
            "auth_uri": "https://accounts.google.com/o/oauth2/auth",
            "token_uri": "https://oauth2.googleapis.com/token",
            "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
            "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-99orv%40kurotsmile.iam.gserviceaccount.com",
            "universe_domain": "googleapis.com"
        }
    ],
    "list_url_data_app":[
        "https://raw.githubusercontent.com/kurotsmile/Database-Store-Json/main/app.json",
        "https://www.googleapis.com/drive/v3/files/1U8RIr1t6qYBnEFNWMloWnOjMoaAZ6RQj?alt=media&key=AIzaSyDKcjH_bDJz3EcqPdV5i62IZNVQ6EkyOFg"
    ],
    "list_url_data_setting_web":[
        "https://raw.githubusercontent.com/kurotsmile/Database-Store-Json/main/setting_web.json"
    ],
    "list_url_data_lang":[
        "https://raw.githubusercontent.com/kurotsmile/Database-Store-Json/main/lang.json"
    ],
    "list_lang_web":[
        "https://raw.githubusercontent.com/kurotsmile/Database-Store-Json/main/lang_data.json"
    ],
    "list_link_store":[
        "https://raw.githubusercontent.com/kurotsmile/Database-Store-Json/main/link_store.json"
    ]
}